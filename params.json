{"name":"Track-expenses","tagline":"Basic tutorial web application to track your expenses","body":"##README\r\n\r\n\r\n#####This is a basic expenses tracker app, with the following features:\r\n\r\n1. Allows users to sign up, and login to this application.\r\n\r\n2. Add and manage expenses.\r\n\r\n3. Filter expenses.\r\n\r\n4. Make small analysis on their expenses.\r\n\r\n5. User roles - regular, and admin. \r\n\r\n\r\n#####Implementation: \r\n\r\nIt uses the MEAN stack: \r\n\r\n1. MongoDb - NoSQL db\r\n\r\n2. Express - Server\r\n\r\n3. Angular - Frontend framework\r\n\r\n4. Node\r\n\r\nAuthentication is implemented using json web tokens. \r\n\r\n\r\n###USER DOCUMENTATION\r\n\r\n#####In your shell/cmd prompt:\r\n```js\r\nnpm install\r\ncd ./public\r\nnpm install bower\r\nbower update\r\ncd ..\r\n./db-start.sh\r\n./app-start.sh\r\n```\r\n#####Now, browse to:\r\n```\r\nlocalhost:3000\r\n```\r\n######To create a admin user, in your terminal, browse to project folder:\r\n```\r\nmongo\r\nuse track-expenses\r\ndb.users.find() // $USERNAME is the username who will be given admin privileges`\r\ndb.users.update({username: $USERNAME}, {$set:{realm: \"1\"}})`\r\n```\t\t","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}